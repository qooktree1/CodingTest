# N : 전체 스테이지 수 | stages : 스테이지의 번호가 담긴 배열
def solution(N, stages):
    # 실패율 = 스테이지에 도달했으나 아직 클리어하지 못한 플레이어의 수 / 스테이지에 도달한 플레이어 수
    stages.sort()
    challenge = [0] * 501  # 스테이지에 도달했으나 아직 클리어하지 못한 플레이어의 수
    complete = [0] * 501  # 스테이지에 도달한 플레이어 수
    # 스테이지에 도달했으나 아직 클리어하지 못한 플레이어의 수
    for i in range(len(stages)):
        challenge[stages[i]-1] += 1
    
    # 스테이지에 도달한 플레이어 수
    cnt = 0
    for stage in stages:
        if stage >= 1:
            cnt += 1
    complete[0] = cnt
    for i in range(1, N):
        complete[i] = complete[i-1] - challenge[i-1]
        
    # 정답 배열
    calc = []
    answer = []
    
    # 실패율 계산
    for i in range(N):
        if complete[i] == 0:
            calc.append([i+1, 0])
        else:
            calc.append([i+1, challenge[i] / complete[i]])
    calc.sort(key=lambda x: x[1], reverse=True)
    
    # 스테이지 번호 배열
    for i in range(len(calc)):
        answer.append(calc[i][0])
    return answer
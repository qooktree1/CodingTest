def finger_move(l, r, key):
    l_len = 0
    r_len = 0
    # 거리 구하기
    l_len = abs(l[0] - key[0]) + abs(l[1] - key[1])
    r_len = abs(r[0] - key[0]) + abs(r[1] - key[1])
    if r_len < l_len:  # 오른손 이용
        return r
    elif r_len > l_len:  # 왼손 이용
        return l
    else:  # 두 엄지손가락의 거리가 같을때
        return



def solution(numbers, hand):
    answer = ''
    # 키패드 좌표 딕셔너리 생성
    key_spot = {1: [0, 0], 2: [0, 1], 3: [0, 2], 4: [1, 0], 5: [1, 1], 6: [1, 2], 7: [2, 0], 8: [2, 1], 9: [2, 2], '*': [3, 0], 0: [3, 1], '#': [3, 2]}
    
    # 처음 손 위치
    l_f = r_f = 0
    l_f = key_spot['*']
    r_f = key_spot['#']
    
    # L, R 판별
    for num in numbers:
        if num == 1 or num == 4 or num == 7:  # 왼손 이용
            answer += 'L'
            l_f = key_spot[num]  # 왼손 위치 이동
            
        elif num == 3 or num == 6 or num == 9:  # 오른손 이용
            answer += 'R'
            r_f = key_spot[num]  # 오른손 위치 이동
            
        else:
            if finger_move(l_f, r_f, key_spot[num]) == l_f:  # 왼손 이용
                l_f = key_spot[num]
                answer += 'L'
            elif finger_move(l_f, r_f, key_spot[num]) == r_f:  # 오른손 이용
                r_f = key_spot[num]
                answer += 'R'
            else:
                if hand == 'left':
                    l_f = key_spot[num]
                    answer += 'L'
                elif hand == 'right':
                    r_f = key_spot[num]
                    answer += 'R'
                
    return answer
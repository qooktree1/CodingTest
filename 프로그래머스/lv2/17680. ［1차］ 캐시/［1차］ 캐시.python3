def solution(cacheSize, cities):
    if not cacheSize:
        return len(cities) * 5
    
    answer = 0
    cache = []
    i = 0
    # LRU 알고리즘 구현 by visited
    # 모두 소문자로 만들기
    for c in cities:
        city = c.lower()

        # 캐시에 존재하면
        if city in cache:
            cache.remove(city)
            cache.append(city)
            answer += 1
            
        else:
            answer += 5
            if i < cacheSize:
                cache.append(city)
                i += 1
            else:
                cache.pop(0)
                cache.append(city)
    return answer